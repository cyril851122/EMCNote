<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:emcnote="clr-namespace:EMCNote"
>
	<emcnote:IndentConverter x:Key="IndentConverter" />
	<Style x:Key="ExpandCollapseToggleStyle"
	       TargetType="ToggleButton">
		<Setter Property="Focusable"
		        Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Grid Width="15"
					      Height="13"
					      Background="Transparent">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
											Storyboard.TargetName="Collapsed">
											<DiscreteObjectKeyFrame KeyTime="0"
												Value="{x:Static Visibility.Hidden}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
											Storyboard.TargetName="Expanded">
											<DiscreteObjectKeyFrame KeyTime="0"
												Value="{x:Static Visibility.Visible}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked" />
								<VisualState x:Name="Indeterminate" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						
						<Polygon x:Name="Collapsed" Points="4,4 8,7 4,10 4,4" Stroke="#515255" StrokeThickness="1" >
							<Polygon.Fill>
								<SolidColorBrush Color="#515255" Opacity="0.4"/>
							</Polygon.Fill>
						
						</Polygon>
						<Polygon x:Name="Expanded" Points="4,6 10,6 7,10 4,6" Stroke="#515255" StrokeThickness="1" Visibility="Hidden" >
							<Polygon.Fill>
								<SolidColorBrush Color="#515255" Opacity="0.4"/>
							</Polygon.Fill>
						
						</Polygon>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type TreeViewItem}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="Padding" Value="0,0,0,0"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TreeViewItem}">
					<StackPanel>
						<Border x:Name="Bd" CornerRadius="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="auto"/>
									<ColumnDefinition/>
								</Grid.ColumnDefinitions>
								<Rectangle x:Name="Hover" Grid.ColumnSpan="2" Stroke="#FFd8f0ff" StrokeThickness="1" HorizontalAlignment="Stretch" RadiusX="4" RadiusY="4" IsHitTestVisible="False" Opacity="0">
									<Rectangle.Fill>
										<LinearGradientBrush StartPoint=".5,0" EndPoint=".5,1">
											<GradientStop Offset="0" Color="#ffe5f4ff" />
											<GradientStop Offset="1" Color="#FFd8f0ff" />
										</LinearGradientBrush>
									</Rectangle.Fill>
								</Rectangle>
								<Rectangle x:Name="Selection"  Grid.ColumnSpan="2" Stroke="#FFfee69e" HorizontalAlignment="Stretch" RadiusX="4" RadiusY="4" IsHitTestVisible="False" Opacity="0" >
									<Rectangle.Fill>
										<LinearGradientBrush>
											<GradientStop Offset="0" Color="#FFfff2ca" />
											<GradientStop Offset="1" Color="#FFfee69e" />
										</LinearGradientBrush>
									</Rectangle.Fill>
								</Rectangle>
								
								<ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}" Margin="{Binding Level, Converter= {StaticResource IndentConverter}}"/>
								
								<ContentPresenter x:Name="PART_Header" Grid.Column="1" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							</Grid>
						</Border>
						
						<ItemsPresenter x:Name="ItemsHost"/>
					</StackPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded" Value="false">
							<Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
						</Trigger>
						<Trigger Property="HasItems" Value="false">
							<Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
						</Trigger>
						<Trigger Property="IsSelected" Value="true">
							<!--<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>-->
							<Setter Property="Opacity" TargetName="Selection" Value="1"/>
							<!--<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>-->
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="true"/>
								<Condition Property="IsExpanded" Value="false"/>
								<Condition Property="IsSelected" Value="false"/>
							</MultiTrigger.Conditions>
							<!--<Setter Property="Background" TargetName="Bd" Value="yellow"/>-->
							<Setter Property="Opacity" TargetName="Hover" Value="1"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="IsSelectionActive" Value="false"/>
							</MultiTrigger.Conditions>
							<!--<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>-->
							<Setter Property="Opacity" TargetName="Selection" Value="1"/>
							<!--<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>-->
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
				<Setter Property="ItemsPanel">
					<Setter.Value>
						<ItemsPanelTemplate>
							<VirtualizingStackPanel/>
						</ItemsPanelTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>



</ResourceDictionary>